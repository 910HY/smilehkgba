請幫我在根目錄建立 api 資料夾，並新增以下 4 個檔案：

- clinics.ts
- hk-clinics.ts
- ngo-clinics.ts
- sz-clinics.ts

所有 API 路由都會從 api/data 資料夾讀 JSON，請先建立 api/data 目錄，
我會自行放入以下 JSON 檔案：
- clinic_list_hkcss_cleaned.json
- ngo_clinics_cleaned.json
- shenzhen_dental_clinics_20250407.json
📄 api/clinics.ts（整合所有診所）
ts
複製
編輯
import type { VercelRequest, VercelResponse } from '@vercel/node';
import fs from 'fs';
import path from 'path';

export default function handler(req: VercelRequest, res: VercelResponse) {
  try {
    const base = path.join(process.cwd(), 'api', 'data');
    const hk = JSON.parse(fs.readFileSync(path.join(base, 'clinic_list_hkcss_cleaned.json'), 'utf8'));
    const ngo = JSON.parse(fs.readFileSync(path.join(base, 'ngo_clinics_cleaned.json'), 'utf8'));
    const sz = JSON.parse(fs.readFileSync(path.join(base, 'shenzhen_dental_clinics_20250407.json'), 'utf8'));

    res.status(200).json([...hk, ...ngo, ...sz]);
  } catch (error) {
    res.status(500).json({ error: 'Failed to read clinic data', message: (error as Error).message });
  }
}
📄 api/hk-clinics.ts
ts
複製
編輯
import type { VercelRequest, VercelResponse } from '@vercel/node';
import fs from 'fs';
import path from 'path';

export default function handler(_req: VercelRequest, res: VercelResponse) {
  try {
    const filePath = path.join(process.cwd(), 'api', 'data', 'clinic_list_hkcss_cleaned.json');
    const data = fs.readFileSync(filePath, 'utf8');
    res.status(200).json(JSON.parse(data));
  } catch (error) {
    res.status(500).json({ error: 'Failed to read HK clinic data' });
  }
}
📄 api/ngo-clinics.ts
ts
複製
編輯
import type { VercelRequest, VercelResponse } from '@vercel/node';
import fs from 'fs';
import path from 'path';

export default function handler(_req: VercelRequest, res: VercelResponse) {
  try {
    const filePath = path.join(process.cwd(), 'api', 'data', 'ngo_clinics_cleaned.json');
    const data = fs.readFileSync(filePath, 'utf8');
    res.status(200).json(JSON.parse(data));
  } catch (error) {
    res.status(500).json({ error: 'Failed to read NGO clinic data' });
  }
}
📄 api/sz-clinics.ts
ts
複製
編輯
import type { VercelRequest, VercelResponse } from '@vercel/node';
import fs from 'fs';
import path from 'path';

export default function handler(_req: VercelRequest, res: VercelResponse) {
  try {
    const filePath = path.join(process.cwd(), 'api', 'data', 'shenzhen_dental_clinics_20250407.json');
    const data = fs.readFileSync(filePath, 'utf8');
    res.status(200).json(JSON.parse(data));
  } catch (error) {
    res.status(500).json({ error: 'Failed to read Shenzhen clinic data' });
  }
}
✅ ✨ 最後記得：加入 vercel.json
json
複製
編輯
{
  "rewrites": [
    { "source": "/(.*)", "destination": "/" }
  ]
}
🗂 放在根目錄，避免 React Router 路由刷新錯誤。

